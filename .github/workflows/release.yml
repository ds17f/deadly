name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Set up JDK 17
      uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4.4.0
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode keystore
      run: |
        mkdir -p .secrets
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > .secrets/my-release-key.jks

    - name: Create keystore.properties
      run: |
        cat > .secrets/keystore.properties << EOF
        storeFile=.secrets/my-release-key.jks
        storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
        keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
        EOF

    - name: Build release APK
      run: ./gradlew :composeApp:assembleRelease --stacktrace

    - name: Build release AAB
      run: ./gradlew :composeApp:bundleRelease --stacktrace

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Rename APK with version
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        cp composeApp/build/outputs/apk/release/composeApp-release.apk composeApp/build/outputs/apk/release/Deadly-${VERSION}.apk

    - name: Rename AAB with version
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        cp composeApp/build/outputs/bundle/release/composeApp-release.aab composeApp/build/outputs/bundle/release/Deadly-${VERSION}.aab

    - name: Upload APK artifact
      uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
      with:
        name: android-apk
        path: composeApp/build/outputs/apk/release/Deadly-*.apk
        retention-days: 90

    - name: Upload AAB artifact
      uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
      with:
        name: android-aab
        path: composeApp/build/outputs/bundle/release/Deadly-*.aab
        retention-days: 90

    - name: Clean up keystore
      if: always()
      run: rm -f .secrets/my-release-key.jks .secrets/keystore.properties

  build-ios:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Set up JDK 17
      uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4.4.0
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Install fastlane
      run: brew install fastlane

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode certificate
      run: |
        mkdir -p .secrets
        echo "${{ secrets.IOS_CERTIFICATE_BASE64 }}" | base64 -d > .secrets/DeadlyApp_AppStore2.p12

    - name: Decode provisioning profile
      run: |
        echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 -d > .secrets/DeadlyApp_AppStore2.mobileprovision
        mkdir -p ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles
        cp .secrets/DeadlyApp_AppStore2.mobileprovision ~/Library/Developer/Xcode/UserData/Provisioning\ Profiles/

    - name: Import certificate to keychain
      run: |
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        security import .secrets/DeadlyApp_AppStore2.p12 -k build.keychain -P "${{ secrets.IOS_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

    - name: Build iOS release
      run: |
        cd iosApp
        fastlane build_release

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Rename IPA with version
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        mv iosApp/build/Deadly.ipa iosApp/build/Deadly-${VERSION}.ipa

    - name: Upload IPA artifact
      uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
      with:
        name: ios-ipa
        path: iosApp/build/Deadly-*.ipa
        retention-days: 90

    - name: Clean up
      if: always()
      run: |
        rm -f .secrets/DeadlyApp_AppStore2.p12 .secrets/DeadlyApp_AppStore2.mobileprovision
        security delete-keychain build.keychain || true

  create-release:
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Download Android APK
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: android-apk
        path: artifacts/

    - name: Download Android AAB
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: android-aab
        path: artifacts/

    - name: Download iOS IPA
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: ios-ipa
        path: artifacts/

    - name: Extract changelog for this version
      id: changelog
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        # Extract the changelog section for this version
        if [ -f CHANGELOG.md ]; then
          CHANGELOG=$(awk "/## \[${VERSION}\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "CHANGELOG=Release $VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2.0.8
      with:
        name: "Deadly v${{ steps.get_version.outputs.VERSION }}"
        body: |
          ## üíÄ Deadly v${{ steps.get_version.outputs.VERSION }}

          ${{ steps.changelog.outputs.CHANGELOG }}

          ### üì¶ Downloads

          **Android:**
          - APK: Direct install on Android devices
          - AAB: For Play Store distribution

          **iOS:**
          - IPA: For TestFlight or enterprise distribution

          ### üìù Installation

          **Android APK:**
          ```bash
          adb install Deadly-${{ steps.get_version.outputs.VERSION }}.apk
          ```

          **iOS (via fastlane):**
          ```bash
          fastlane pilot upload -i Deadly-${{ steps.get_version.outputs.VERSION }}.ipa
          ```
        files: |
          artifacts/Deadly-*.apk
          artifacts/Deadly-*.aab
          artifacts/Deadly-*.ipa
        draft: false
        prerelease: false
